// 1. MVC정의
// Model, View, Controller라는 세개의 영역으로 구분하고 각 영역간의 코드 결합도를 최소화 시키는 개발 패턴이다.

// 2. 각 영역의 역할
// Model: 비니지스 로직과 그에 필요한 데이터를 다루는 영역
// View: 최종 사용자에게 보여지는 프레젠테이션 로직 담당
// Controller:

// 3. 순서
// client가 특정 view 영역을 호출 ->  요청받은 view영역이 특정 model영역의 비지니스 로직을 호출하고 수행결과를 반환받음 -> 데이터를 가공하여 client에게 응답할 UI생성

// 4. MVC의 장점 및 단점
// 장점:비지니스 로직에 대한 변경이 많지 않은 경우 , 유지보수시 개발비용이 줄어든다
// 단점: model 상의 비지니스 로직 변경시, 그것을 호출하는 view 프레젠테이션 로직들을 전부 수정해야 함
